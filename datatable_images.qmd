---
title: "SV Report"
subtitle: "Chromoseq"
author: "NCBR"
date: "`r Sys.Date()`"
theme: "cosmo"
params:
  input_file: "data/input.example.tsv"
  genome_plot: "figs/sample.genomePlot.png"
format:
  html:
    page-layout: full
    self-contained: true
    embed-resources: true
    code-tools: true
    code-fold: true
    code-overflow: scroll
    code-line-numbers: true
    toc: false
    toc-depth: 3
    toc-location: body
    number-sections: false
    number-depth: 3
    toc_float:
      collapsed: false
---

```{r setup, include=FALSE}
# Set the working directory
suppressMessages(library("knitr"))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

# Predicted Structural Variation  
<!--Per sample genome-wide plot-->
![](`r params$genome_plot`){width=100% fig-align="center"} 

```{r data_table_results}
# Load required R packages 
# Install via CRAN: 
#   install.packages('packageName')
suppressMessages(library("DT"))

# Reading predicted SV results
results = read.table(
    file = params$input_file,  # 'test.tsv'
    sep = '\t',
    header = TRUE, 
    row.names = 1, 
    quote = ""
)

# Get filename without extension 
# for DT export as .CSV or .XLSX 
download_basename <- sub(
    pattern = "(.*)\\..*$", 
    replacement = "\\1", 
    basename(params$input_file)
)

# Create interactive data 
# table with the results 
datatable(
    results,
    rownames = FALSE,    # hide rownames
    escape = FALSE,      # allow embedding of html for image
    # filter = "bottom", # allows filtering on each column
    extensions = c(
      "Buttons",         # add download buttons
      "Scroller",        # for scrolling instead of pagination
      "SearchBuilder"    # create complex search queries
    ),
    style = "auto",
    width = "100%",
    options = list(
      dom = "QBlrtip",  # specify content (search box, etc)
      deferRender = TRUE,
      scrollX = TRUE,
      scrollY = 800,
      scroller = TRUE,
      buttons = list(
        list(
          extend="csv",   # download as .csv
          filename=download_basename,
          exportOptions=list(columns = ':gt(0)')
        ),
        list(
          extend="excel",  # download as .xlsx
          filename=download_basename,
          exportOptions=list(columns = ':gt(0)')
        ),
        list(
          extend="colvisGroup", # View compact table
          text="Compact View",
          show=c(0:14,31,length(colnames(results))-1),
          hide=c(15:30,32,33,34:length(colnames(results))-2)
        ),
        list(
          extend="colvisGroup",  # View entire table
          text="Full View",
          show=c(0:length(colnames(results))-1)
        )
      )
    ),
)
```
